# .github/workflows/feature-update-pr.yml
name: "PR: develop → active feature/*"

on:
  workflow_dispatch:
    inputs:
      dry_run:     # true にすると PR を作らずログだけ
        description: "Preview only (no PR creation)"
        type: boolean
        default: false

jobs:
  create-prs:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.BOT_PAT }}
      SLACK_WEBHOOK_URL:  ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v4
      - name: Scan and open PRs
        run: |
          set -euo pipefail
          repo="${{ github.repository }}"
          cutoff=$(date -u -d '-7 days' +%s)
          dry="${{ github.event.inputs.dry_run || 'false' }}"
          summary=""

          echo "==> Collecting feature/* branches updated since $(date -u -d '-7 days')"
          branches=$(gh api "/repos/${repo}/branches?per_page=100" --paginate --jq '.[].name' | grep '^feature/')

          for br in $branches; do
            pushed=$(gh api "/repos/${repo}/branches/${br}" --jq '.commit.commit.committer.date')
            [[ $(date -d "$pushed" +%s) -lt $cutoff ]] && { echo "⏭  $br skipped"; continue; }

            echo "🔍  $br is active (last push $pushed)"

            existing=$(gh pr list --base "$br" --head develop --state open --json number -q '.[0].url')
            [[ -n "$existing" ]] && { echo "↳  PR already exists; skipping"; continue; }

            if [[ $dry == "true" ]]; then
              summary+="\n• (dry-run) develop → $br"
              echo "💡  (dry-run) Would create PR develop → $br"
              continue
            fi

            echo "✏️  Creating PR develop → $br ..."
            pr_url=$(gh pr create --base "$br" --head develop \
                        --title "Sync develop into $br" \
                        --body "Automated PR to keep **$br** up-to-date with **develop**." \
                        | tail -n1)
            summary+="\n• *$br* — <$pr_url|PR>"
          done

          # ----- Slack digest -----
          if [[ -n "$summary" ]]; then
            slack_text="🟢 *以下のfeatureブランチが更新されました*\n"
            slack_text+="各自作業ブランチの更新を行ってください :arrow_down:\n"
            slack_text+="$summary"

            payload=$(jq -Rn --arg text "$slack_text" '{text:$text}')
            curl -s -X POST -H 'Content-type: application/json' \
                 --data "$payload" "$SLACK_WEBHOOK_URL"
          fi

          echo "✅  Finished"
