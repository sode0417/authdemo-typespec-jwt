name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    ### ❶ Postgres ― GitHub Hosted Runner 上に DB を建てる
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: authdemo
        # ↓ ランナー ↔ DB の疎通
        ports: ['5432:5432']
        # ヘルスチェック (30s × 20 = 最大10分待機)
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=30s
          --health-timeout=5s
          --health-retries=20

    env:
      # EF Core から参照される DSN
      Pg__ConnectionString: Host=localhost;Port=5432;Database=authdemo;Username=postgres;Password=postgres

    steps:
    ### ❷ リポジトリ取得
    - uses: actions/checkout@v4

    ### ❸ Node / TypeSpec
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with: { node-version: '20' }

    - name: Install npm deps & compile TypeSpec
      run: |
        npm ci
        npm run tsp:compile     # => Generated/

    ### ❹ .NET
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v3
      with: { dotnet-version: '8.0.x' }

    # Install EF Core tools
    - name: Install Entity Framework Core tools
      run: dotnet tool install --global dotnet-ef

    # ソリューション全体をリストア & ビルド
    - name: Restore NuGet packages
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release

    # ❺ マイグレーション適用 (Infrastructure → Api)
    - name: Apply EF Core migrations
      run: |
        cd src/AuthDemo.Api
        dotnet ef database update \
          --project ../AuthDemo.Infrastructure \
          --startup-project .

    ### ❻ 単体テストがあればここで dotnet test …
