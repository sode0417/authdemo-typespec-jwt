import { AssetEmitter } from "@typespec/asset-emitter";
import { CSharpCollectionType, CSharpType, LibrarySourceFile } from "./interfaces.js";
import { CSharpServiceEmitterOptions } from "./lib.js";
export interface BusinessLogicImplementation {
    namespace: string;
    interfaceName: string;
    usings: string[];
    className: string;
    methods: BusinessLogicMethod[];
}
export interface BusinessLogicMethod {
    methodName: string;
    methodParams: string;
    returnTypeName: string;
    returnType: CSharpType | CSharpCollectionType;
    instantiatedReturnType?: string;
}
export type BusinessLogicRegistrations = Map<string, BusinessLogicImplementation>;
export type BusinessLogicRegistration = [string, BusinessLogicImplementation];
export declare function getScaffoldingHelpers(emitter: AssetEmitter<string, CSharpServiceEmitterOptions>, useSwagger: boolean, openApiPath: string, hasMockRegistration: boolean): LibrarySourceFile[];
export declare function getBusinessLogicImplementations(emitter: AssetEmitter<string, Record<string, never>>, registrations: BusinessLogicRegistrations, useSwagger: boolean, openApiPath: string): LibrarySourceFile[];
//# sourceMappingURL=scaffolding.d.ts.map