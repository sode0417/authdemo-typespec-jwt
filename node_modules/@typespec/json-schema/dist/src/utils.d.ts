import { type DecoratorFunction, type Model, type Type } from "@typespec/compiler";
export declare function createDataDecorator<T extends DecoratorFunction, Target extends Type = Parameters<T>[1]>(key: symbol, validate?: (...args: Parameters<T>) => boolean): readonly [(program: import("@typespec/compiler").Program, type: Target) => Parameters<T>[2] | undefined, (program: import("@typespec/compiler").Program, type: Target, value: Parameters<T>[2]) => void, T];
export declare function includeDerivedModel(model: Model): boolean;
//# sourceMappingURL=utils.d.ts.map